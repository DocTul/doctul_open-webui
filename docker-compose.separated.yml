services:
  # Backend - API FastAPI
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: openwebui-backend
    restart: unless-stopped
    volumes:
      - backend-data:/app/backend/data
    ports:
      - "8383:8383"
    environment:
      # ========================================
      # CONFIGURAÇÕES DE API EXTERNA
      # ========================================
      
      # Desabilitar Ollama e habilitar OpenAI API
      - ENABLE_OLLAMA_API=false
      - ENABLE_OPENAI_API=true
      
      # Configuração da API principal (modelo na porta 8001)
      - OPENAI_API_BASE_URL=http://host.docker.internal:8001/v1
      - OPENAI_API_BASE_URLS=http://host.docker.internal:8001/v1
      - OPENAI_API_KEY=none
      - OPENAI_API_KEYS=none
      
      # ========================================
      # CONFIGURAÇÕES RAG/EMBEDDING
      # ========================================
      
      # Configuração RAG/Embedding (modelo na porta 8002)
      - RAG_EMBEDDING_ENGINE=openai
      - RAG_EMBEDDING_MODEL=intfloat/multilingual-e5-base
      - RAG_OPENAI_API_BASE_URL=http://host.docker.internal:8002/v1
      - RAG_OPENAI_API_KEY=none
      - RAG_EMBEDDING_BATCH_SIZE=32
      
      # ========================================
      # CONFIGURAÇÕES BÁSICAS DO BACKEND
      # ========================================
      
      - WEBUI_SECRET_KEY=your-secret-key-change-this-in-production
      - HOST=0.0.0.0
      - PORT=8383
      - DATA_DIR=/app/backend/data
      - DOCKER=true
      
      # ========================================
      # AUTENTICAÇÃO E USUÁRIOS
      # ========================================
      
      - WEBUI_AUTH=true
      - ENABLE_SIGNUP=true
      - ENABLE_LOGIN_FORM=true
      - ENABLE_API_KEY=true
      - DEFAULT_USER_ROLE=pending
      - JWT_EXPIRES_IN=-1
      
      # ========================================
      # FUNCIONALIDADES BÁSICAS
      # ========================================
      
      - ENABLE_CHANNELS=true
      - ENABLE_NOTES=true
      - ENABLE_COMMUNITY_SHARING=true
      - ENABLE_MESSAGE_RATING=true
      - ENABLE_USER_WEBHOOKS=false
      
      # ========================================
      # CONFIGURAÇÕES RAG ADICIONAIS
      # ========================================
      
      - RAG_TOP_K=5
      - CHUNK_SIZE=1000
      - CHUNK_OVERLAP=100
      - PDF_EXTRACT_IMAGES=false
      - ENABLE_RAG_WEB_SEARCH=false
      - ENABLE_RAG_LOCAL_WEB_FETCH=true
      - ENABLE_RAG_HYBRID_SEARCH=true
      - RAG_TEMPLATE=Use the following context as your learned knowledge, inside <context></context> XML tags.\n<context>\n[context]\n</context>\n\nWhen answer to user:\n- If you don't know when you are not sure, say that you don't know.\n- If you don't know when you are not sure, say that you don't know.\n- Answer the question based on the context above.
      
      # ========================================
      # CONFIGURAÇÕES DE IMAGEM
      # ========================================
      
      - ENABLE_IMAGE_GENERATION=false
      - IMAGE_GENERATION_ENGINE=openai
      - IMAGE_SIZE=1024x1024
      - IMAGE_STEPS=50
      
      # ========================================
      # CONFIGURAÇÕES DE ÁUDIO
      # ========================================
      
      - AUDIO_STT_ENGINE=whisper
      - AUDIO_STT_MODEL=base
      - AUDIO_TTS_ENGINE=openai
      - WHISPER_MODEL=base
      - WHISPER_MODEL_DIR=/app/backend/data/cache/whisper/models
      
      # ========================================
      # CONFIGURAÇÕES DE TAREFAS
      # ========================================
      
      - ENABLE_TAGS_GENERATION=true
      - ENABLE_TITLE_GENERATION=true
      - ENABLE_AUTOCOMPLETE_GENERATION=false
      - ENABLE_SEARCH_QUERY_GENERATION=true
      
      # ========================================
      # LOGS E DEBUG
      # ========================================
      
      - GLOBAL_LOG_LEVEL=INFO
      - RAG_LOG_LEVEL=DEBUG
      - OPENAI_LOG_LEVEL=DEBUG
      - MODELS_LOG_LEVEL=INFO
      
      # ========================================
      # CONFIGURAÇÕES DE SEGURANÇA
      # ========================================
      
      - WEBUI_SESSION_COOKIE_SECURE=false
      - WEBUI_SESSION_COOKIE_SAME_SITE=lax
      - ENABLE_COMPRESSION_MIDDLEWARE=true
      
      # ========================================
      # OUTRAS CONFIGURAÇÕES IMPORTANTES
      # ========================================
      
      - ENABLE_WEBSOCKET_SUPPORT=true
      - ENABLE_VERSION_UPDATE_CHECK=true
      - BYPASS_MODEL_ACCESS_CONTROL=false
      - SAFE_MODE=false
      - ENV=prod
      
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8383/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - openwebui-network

    # Frontend - Interface Svelte
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: openwebui-frontend
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      # URL do backend
      - BACKEND_URL=http://backend:8383
      - PUBLIC_API_BASE_URL=http://localhost:8080
      
      # Configurações de build
      - NODE_ENV=production
      - VITE_API_BASE_URL=/api
      
      # Configurações opcionais do frontend
      - PUBLIC_ORIGIN=http://localhost:8080
      - WEBUI_NAME=Open WebUI
      
    depends_on:
      - backend
    networks:
      - openwebui-network

  # Proxy reverso Nginx
  nginx:
    image: nginx:alpine
    container_name: openwebui-nginx
    restart: unless-stopped
    ports:
      - "3000:80"
    volumes:
      - ./nginx-separated.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend
    networks:
      - openwebui-network

volumes:
  backend-data:
    name: openwebui-backend-data

networks:
  openwebui-network:
    driver: bridge
    name: openwebui-network
